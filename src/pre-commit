#!/bin/bash

PROJECT=`php -r "echo dirname(dirname(dirname(realpath('$0'))));"`
STAGED_FILES_CMD=`git diff --cached --name-only --diff-filter=ACMR HEAD | grep \\\\.php`

# Determine if a file list is passed
if [ "$#" -eq 1 ]
then
    oIFS=$IFS
    IFS='
    '
    SFILES="$1"
    IFS=${oIFS}
fi
SFILES=${SFILES:-$STAGED_FILES_CMD}

echo "Checking PHP Lint..."
for FILE in ${SFILES}
do
    php -l -d display_errors=0 ${PROJECT}/${FILE}
    if [ $? != 0 ]
    then
        echo "Fix the error before commit."
        exit 1
    fi
    FILES="${FILES} $PROJECT/$FILE"
done

if [ "$CODE_FIXER" == 'false' ]
then
   echo "Skipping code fixer (set the environment variable CODE_FIXER=true to activate it)"
   exit 1
else
    # Run the code style fixes if phpcs exists
    if [ -f "vendor/bin/phpcs" ]
    then
        if [ "${FILES}" != "" ]
        then
            echo "Running Code Sniffer. Code standard PSR2."
            ./vendor/bin/phpcs --standard=PSR2 --encoding=utf-8 -n -p ${FILES}
            if [ $? != 0 ]
            then
                exec < /dev/tty
                echo "If you would like to commit without running phpcs, run your commit overriding the env var with: 'CODE_FIXER=false git commit'"
                echo 'Fix automatically (where possible)? [Y/n]'
                read proceed
                if [[ ! ("$proceed" == 'y' || "$proceed" == 'Y' || "$proceed" == '') ]]
                then
                    exit 1
                else
                  echo "automagically fixing files"
                  ./Vendor/bin/phpcbf ${FILES}

                  echo "re-staging updated files"
                  git add ${FILES}
                fi
            fi
        fi
    fi
fi